# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, 
# а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть,
#  чтобы все монетки были повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, которые нужно перевернуть

def min_flips(coins):
    # Подсчитываем количество монеток, лежащих решкой вверх и гербом вверх
    heads = coins.count('H')
    tails = coins.count('T')
    
    # Находим минимальное количество монеток, которые нужно перевернуть
    return min(heads, tails)

# Пример использования
coins = ['H', 'T', 'T', 'H', 'H']
print(min_flips(coins))  # Выведет: 2


# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), 
# а Катя должна их отгадать. Для этого Петя делает две подсказки. 
# Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

import math

# Вводим сумму и произведение
S = int(input())
P = int(input())

# Решаем квадратное уравнение
D = S ** 2 - 4 * P
if D < 0:
    print("No solution")
else:
    y1 = (S + math.sqrt(D)) / 2
    y2 = (S - math.sqrt(D)) / 2

    # Находим значения x
    x1 = S - y1
    x2 = S - y2

    # Выводим результаты
    print(int(x1), int(y1))
    print(int(x2), int(y2))

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

N = int(input("Введите N: "))

power = 0
num = 1

while num <= N:
    print(num)
    power += 1
    num = 2 ** power
