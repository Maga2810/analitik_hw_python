# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. 
# m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

n = int(input("Введите количество элементов первого множества: "))
A = set(map(int, input("Введите элементы первого множества через пробел: ").split()))

m = int(input("Введите количество элементов второго множества: "))
B = set(map(int, input("Введите элементы второго множества через пробел: ").split()))

common_elements = sorted(list(A & B))

print("Общие элементы в порядке возрастания: ")
for elem in common_elements:
    print(elem, end=" ")


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке,
# причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. 
# Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, 
# поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, 
# которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.

n = int(input())  # количество кустов на грядке
berries = list(map(int, input().split()))  # количество ягод на каждом кусте

max_berries = 0  # максимальное количество собранных ягод

for i in range(n):
    # находим количество ягод, которое может собрать собирающий модуль, находящийся перед текущим кустом
    collected = berries[i] + (berries[i-1] if i > 0 else 0) + (berries[i+1] if i < n-1 else 0)
    # обновляем максимальное количество собранных ягод
    max_berries = max(max_berries, collected)

print(max_berries)
